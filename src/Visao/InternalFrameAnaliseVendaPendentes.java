/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.EnviarCodigos;
import Controle.VariaveisDeControle;
import DAO.ClienteDAO;
import DAO.VendasPendentesDAO;
import Entidades.VendasPendentes;
import EmailConfig.EmailService;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;

/**
 *
 * @author Joao
 */
public class InternalFrameAnaliseVendaPendentes extends javax.swing.JInternalFrame {

    VendasPendentes ven;

    public InternalFrameAnaliseVendaPendentes() {
        initComponents();
        bloqueiaComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jTextFieldPagamento = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldObservacoes = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jCheckBoxNumeroConfirmado = new javax.swing.JCheckBox();
        jTextFieldApelido = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldProduto = new javax.swing.JTextField();
        jTextFieldId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonCarregar = new javax.swing.JButton();
        jScrollvendasPendentes = new javax.swing.JScrollPane();
        jListVendasPendentes = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setResizable(true);
        setTitle("Análise de Vendas");
        setOpaque(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                closing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel6.setText("Pagamento:");

        jTextFieldPagamento.setEditable(false);

        jLabel30.setText("Observação:");

        jTextFieldObservacoes.setEditable(false);

        jLabel7.setText("Código:");

        jLabel2.setText("Apelido:");

        jTextFieldCodigo.setEditable(false);
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });

        jCheckBoxNumeroConfirmado.setText("SIM");
        jCheckBoxNumeroConfirmado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNumeroConfirmadoActionPerformed(evt);
            }
        });

        jTextFieldApelido.setEditable(false);

        jLabel34.setText("Numero confirmado:");

        jLabel3.setText("Email:");

        jTextFieldEmail.setEditable(false);
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });

        jLabel5.setText("ID:");

        jTextFieldProduto.setEditable(false);
        jTextFieldProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProdutoActionPerformed(evt);
            }
        });

        jTextFieldId.setEditable(false);

        jLabel4.setText("Produto:");

        jButtonCarregar.setText("Carregar");
        jButtonCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarActionPerformed(evt);
            }
        });

        jListVendasPendentes.setModel(VariaveisDeControle.jModelList);
        jListVendasPendentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListVendasPendentesMouseClicked(evt);
            }
        });
        jListVendasPendentes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListVendasPendentesValueChanged(evt);
            }
        });
        jScrollvendasPendentes.setViewportView(jListVendasPendentes);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollvendasPendentes)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldObservacoes)
                                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldProduto)
                                    .addComponent(jTextFieldPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldApelido)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCarregar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxNumeroConfirmado)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldApelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextFieldObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxNumeroConfirmado)
                    .addComponent(jLabel34))
                .addGap(29, 29, 29)
                .addComponent(jScrollvendasPendentes, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jCheckBoxNumeroConfirmadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNumeroConfirmadoActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Deseja mesmo confirmar o número?", "Confirmar numero", JOptionPane.YES_NO_OPTION);        // TODO add your handling code here:
        if (i == 0) {
            String s = JOptionPane.showInputDialog("Numero :" + new ClienteDAO().getCliente(ven.getApelido()).getTelefone() + "\nDeseja adicionar outro?");
            if (null == s) {

            } else {
                switch (s) {
                    case "":
                        new ClienteDAO().setNumeroConfimado(ven.getApelido(), s);
                        break;
                    default:
                        new ClienteDAO().setNumeroConfimado(ven.getApelido(), "|" + s);
                        break;
                }
            }

        }
    }//GEN-LAST:event_jCheckBoxNumeroConfirmadoActionPerformed

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdutoActionPerformed

    private void jButtonCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarActionPerformed
        new Thread(() -> {
            if (VariaveisDeControle.listaCarregando) {
                JOptionPane.showMessageDialog(null, "A lista está sendo carregada, aguarde!");
            } else if (VariaveisDeControle.jModelList.getSize() == 0) {
                VariaveisDeControle.carregarVendasPendentesECodigos();
                for (int i = 0; i < VariaveisDeControle.listVen.size(); ++i) {
                    VariaveisDeControle.jModelList.insertElementAt(VariaveisDeControle.listVen.get(i), i);
                }
                this.desbloqueiaComponentes();
                jListVendasPendentes.setSelectedIndex(0);
            } else {
                jListVendasPendentes.setModel(VariaveisDeControle.jModelList);
                this.desbloqueiaComponentes();
                jListVendasPendentes.setSelectedIndex(0);
            }
        }).start();
        //   ---
    }//GEN-LAST:event_jButtonCarregarActionPerformed

    private void closing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_closing
        VariaveisDeControle.frameAnaliseVendasAberto = false;
    }//GEN-LAST:event_closing

    private void jListVendasPendentesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListVendasPendentesValueChanged
        if (VariaveisDeControle.jModelList.getSize() != 0 && jListVendasPendentes.getSelectedIndex() > -1) {
                VariaveisDeControle.indexItemSelecionado = jListVendasPendentes.getSelectedIndex();
                ven = VariaveisDeControle.listVen.get(VariaveisDeControle.indexItemSelecionado);
                preencheCamposAnaliseVendas();
        }
    }//GEN-LAST:event_jListVendasPendentesValueChanged

    private void jListVendasPendentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListVendasPendentesMouseClicked
        if ((evt.getModifiers() & MouseEvent.BUTTON3_MASK) != 0) {
            JPopupMenu menu = new JPopupMenu();
            JMenuItem enviar = new JMenuItem("Enviar");
            JMenuItem excluir = new JMenuItem("Excluir");
            JMenuItem solicitarContato = new JMenuItem("Solicitar Contato");
            enviar.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    enviarVenda(ven);
                }
            });
            excluir.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    excluirVenda(ven);
                }
            });
            solicitarContato.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    solicitarContato(ven);
                }
            });
            menu.add(enviar);
            menu.add(excluir);
            menu.add(solicitarContato);
            menu.show(this, evt.getX(), evt.getY());
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jListVendasPendentesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCarregar;
    private javax.swing.JCheckBox jCheckBoxNumeroConfirmado;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private static javax.swing.JList<String> jListVendasPendentes;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollvendasPendentes;
    private javax.swing.JTextField jTextFieldApelido;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldObservacoes;
    private javax.swing.JTextField jTextFieldPagamento;
    private javax.swing.JTextField jTextFieldProduto;
    // End of variables declaration//GEN-END:variables

    public void carregarDadosVendasPendentes(boolean primeiroCarregamento) {
        if (!VariaveisDeControle.listaCarregando) {
            if (!VariaveisDeControle.listVen.isEmpty()) {
                ven = VariaveisDeControle.listVen.get(0);
                jListVendasPendentes.setSelectedIndex(0);
                InternalEnviosManuais.getJList().setSelectedIndex(0);
                System.out.println(ven);
                VariaveisDeControle.carregamentoCodigoManual = false;
                preencheCamposAnaliseVendas();
                desbloqueiaComponentes();

            } else {
                if (VariaveisDeControle.listaCarregando) {
                    // não remover este método. enquanto a lista estiver carregando, listaCarregando será
                    // false e não vai exibir a mensaguem "Não há vendas"
                } else {
                    JOptionPane.showMessageDialog(null, "Não há vendas pendentes no momento");
                    VariaveisDeControle.codigosCarregadosListVen = false;
                    VariaveisDeControle.listVen.clear();
                    jListVendasPendentes.removeAll();
                    InternalEnviosManuais.getJList().removeAll();
                    bloqueiaComponentes();
                }
            }
        }
    }

    private void desbloqueiaComponentes() {
        jListVendasPendentes.setEnabled(true);
    }

    private void bloqueiaComponentes() {
        jListVendasPendentes.setEnabled(false);
    }

    private void limparCampos() {
        jTextFieldApelido.setText("");
        jTextFieldId.setText("");
        jTextFieldEmail.setText("");
        jTextFieldProduto.setText("");
        jTextFieldPagamento.setText("");
        jTextFieldCodigo.setText("");
        jTextFieldObservacoes.setText("");
        jCheckBoxNumeroConfirmado.setSelected(false);
    }

    private void preencheCamposAnaliseVendas() {
        VendasPendentes ven = this.ven;
        jTextFieldObservacoes.setText(ven.getObservacoes());
        jTextFieldApelido.setText(ven.getApelido());
        jTextFieldEmail.setText(ven.getEmail());
        jTextFieldProduto.setText(VariaveisDeControle.mapProd.get(ven.getIdProduto()).getNomeProdutoQtdTotal(ven.getQtd()));
        jTextFieldPagamento.setText(ven.getPagamento());
        jTextFieldCodigo.setText(ven.getCodigo());
        jTextFieldId.setText(ven.getId_venda());
        if (InternalEnviosManuais.getJList() != null) {
            InternalEnviosManuais.getJList().setSelectedIndex(VariaveisDeControle.indexItemSelecionado);
        }
    }

    private void excluirDaLista(VendasPendentes v) {
        VendasPendentes ven = new VendasPendentes();
        VariaveisDeControle.listVen.remove(VariaveisDeControle.indexItemSelecionado);
        VariaveisDeControle.jModelList.removeElementAt(VariaveisDeControle.indexItemSelecionado);
    }

    public static JList getJList() {
        return jListVendasPendentes;
    }

    private void excluirVenda(VendasPendentes ven) {
        int opcao = JOptionPane.showConfirmDialog(null, "Excluir a venda " + ven.getId_venda() + "?", "Excluir venda?", JOptionPane.YES_NO_OPTION);
        if (opcao == 0) {
            limparCampos();
            new VendasPendentesDAO().remove(ven.getId_venda());
            excluirDaLista(ven);
            Runnable rr = () -> {
                carregarDadosVendasPendentes(false);
            };
            Thread tt = new Thread(rr);
            tt.start();
        }
    }

    private void enviarVenda(VendasPendentes ven) {
        VendasPendentes v = ven;
        if (v.getCodigo() == null || v.getIdCodigo() == 0) {
            JOptionPane.showMessageDialog(null, "A venda não pode ser enviada pois não possui código válido");
        } else {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    new EnviarCodigos().setCodigoNaVendaNoBanco(v);
                    new EnviarCodigos().enviarCodigoUmaVenda(v, false, null, null);
                }
            }).start();

            new Thread(new Runnable() {
                @Override
                public void run() {
                    excluirDaLista(v);
                    carregarDadosVendasPendentes(false);
                }
            }).start();
        }
    }

    private void solicitarContato(VendasPendentes ven) {
        new Thread(new Runnable() {
            @Override
            public void run() {
                if (new VendasPendentesDAO().marcaComoPendente(ven.getId_venda(), "Contato solicitado e aguardando")) {
                    limparCampos();
                    excluirDaLista(ven);
                    carregarDadosVendasPendentes(false);
                }
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                String corpo = "Para que seu código seja enviado, por favor entre em contato pelo whastapp 91980452185. Essa verificação está informada no anúncio e é bem rápida. Aguardo :)";
                new EmailService(ven.getEmail(), "Contato Pendente", corpo).sendEmail(ven.getApelido());
            }
        }).start();
    }
}
